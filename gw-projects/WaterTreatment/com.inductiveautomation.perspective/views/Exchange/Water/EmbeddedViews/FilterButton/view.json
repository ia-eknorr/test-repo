{
  "custom": {},
  "params": {
    "filterNum": 1,
    "selected": true
  },
  "propConfig": {
    "params.filterNum": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.selected": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 150,
      "width": 500
    }
  },
  "root": {
    "children": [
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\tpayload \u003d {\"filterNum\":self.view.params.filterNum}\n\tsystem.perspective.sendMessage(\"Filter-Selection\", payload, scope \u003d \"page\")"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Filter1",
          "tooltip": {
            "enabled": true
          }
        },
        "position": {
          "grow": 1
        },
        "propConfig": {
          "meta.tooltip.text": {
            "binding": {
              "config": {
                "path": "view.params.filterNum"
              },
              "transforms": [
                {
                  "expression": "\"View \u0026 Control Filter #\" + {value}",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          },
          "props.image.icon.color": {
            "binding": {
              "config": {
                "expression": "toInt(tag(\"[default]Exchange/Water/Filters/Filter\" + {view.params.filterNum} + \"/Control/Value\"))"
              },
              "transforms": [
                {
                  "fallback": "var(--neutral-10)",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": 0,
                      "output": "var(--neutral-100)"
                    },
                    {
                      "input": 1,
                      "output": "var(--neutral-100)"
                    },
                    {
                      "input": 2,
                      "output": "var(--neutral-10)"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "expr"
            }
          },
          "props.image.icon.path": {
            "binding": {
              "config": {
                "expression": "toInt(tag(\"[default]Exchange/Water/Filters/Filter\" + {view.params.filterNum} + \"/Control/Value\"))"
              },
              "transforms": [
                {
                  "fallback": "material/error_outline",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": 0,
                      "output": "material/clear"
                    },
                    {
                      "input": 1,
                      "output": "material/play_circle_outline"
                    },
                    {
                      "input": 2,
                      "output": "material/refresh"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "expr"
            }
          },
          "props.style.backgroundColor": {
            "binding": {
              "config": {
                "struct": {
                  "alarms": "tag(\"[default]Exchange/Water/Filters/Filter\" + {view.params.filterNum} + \"/Alarms/ActiveAlarms\")",
                  "control": "toInt(tag(\"[default]Exchange/Water/Filters/Filter\" + {view.params.filterNum} + \"/Control/Value\"))"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "expression": "if({value}[\u0027control\u0027] \u003c 2 \u0026\u0026 {value}[\u0027alarms\u0027] \u003e 0,\r\n\t4,\r\n\t{value}[\u0027control\u0027])",
                  "type": "expression"
                },
                {
                  "fallback": "var(--error)",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": 0,
                      "output": "var(--neutral-40)"
                    },
                    {
                      "input": 1,
                      "output": "var(--success)"
                    },
                    {
                      "input": 2,
                      "output": "var(--qual-1)"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "expr-struct"
            }
          },
          "props.style.classes": {
            "binding": {
              "config": {
                "struct": {
                  "backwashMode": "toInt(tag(\"[default]Exchange/Water/Filters/Filter\" + {view.params.filterNum} + \"/Control/BackwashMode\"))",
                  "faulted": "toInt(tag(\"[default]Exchange/Water/Filters/Filter\" + {view.params.filterNum} + \"/Control/Faulted\"))",
                  "mode": "toInt(tag(\"[default]Exchange/Water/Filters/Filter\" + {view.params.filterNum} + \"/Control/Mode\"))",
                  "state": "toInt(tag(\"[default]Exchange/Water/Filters/Filter\" + {view.params.filterNum} + \"/Control/Value\"))"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "expression": "\u0027exchange/water/filter-mobile \u0027 + \r\ncase({value}[\u0027state\u0027],\r\n\t0, if({value}[\u0027faulted\u0027], \u0027exchange/water/indicator/state-off-faulted\u0027, \u0027exchange/water/indicator/state-off\u0027),\r\n\t1, if({value}[\u0027faulted\u0027], \u0027exchange/water/indicator/state-on-faulted\u0027, \u0027exchange/water/indicator/state-on\u0027),\r\n\t2, if({value}[\u0027faulted\u0027], \u0027exchange/water/indicator/state-backwash-faulted\u0027, \u0027exchange/water/indicator/state-backwash\u0027),\r\n\t\u0027exchange/water/error\u0027)\r\n+ \u0027 \u0027 +\r\ncase(max({value}[\u0027mode\u0027], {value}[\u0027backwashMode\u0027]),\r\n\t0, \u0027exchange/water/indicator/mode-off\u0027,\r\n\t1, \u0027exchange/water/indicator/mode-auto\u0027,\r\n\t2, \u0027exchange/water/indicator/mode-hand\u0027,\r\n\t\u0027exchange/water/error\u0027)",
                  "type": "expression"
                }
              ],
              "type": "expr-struct"
            }
          },
          "props.style.color": {
            "binding": {
              "config": {
                "expression": "toInt(tag(\"[default]Exchange/Water/Filters/Filter\" + {view.params.filterNum} + \"/Control/Value\"))"
              },
              "transforms": [
                {
                  "fallback": "var(--neutral-10)",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": 0,
                      "output": "var(--neutral-100)"
                    },
                    {
                      "input": 1,
                      "output": "var(--neutral-100)"
                    },
                    {
                      "input": 2,
                      "output": "var(--neutral-10)"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "expr"
            }
          },
          "props.style.outlineStyle": {
            "binding": {
              "config": {
                "path": "view.params.selected"
              },
              "transforms": [
                {
                  "fallback": "none",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": true,
                      "output": "solid"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "property"
            }
          },
          "props.text": {
            "binding": {
              "config": {
                "expression": "{view.params.filterNum}\t"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "image": {
            "height": "2em",
            "icon": {},
            "position": "right",
            "style": {
              "classes": "exchange/water/filter-mobile"
            },
            "width": "1em"
          },
          "style": {
            "boxShadow": "1px 1px 2px #888888",
            "fontWeight": "400",
            "margin": "5px",
            "outlineColor": "var(--callToAction)",
            "outlineWidth": "4px",
            "padding": "5px"
          }
        },
        "type": "ia.input.button"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column"
    },
    "type": "ia.container.flex"
  }
}